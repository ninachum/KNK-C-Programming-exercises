(1)
can lead to mistake.
(ex. misunderstanding the type of array)

/* The problem with sizeof(a) / sizeof(t) is that it can't easily be checked for correctness by someone reading the program. */

(2)
use a character, with single quotation mark.
assuming ASCII character set, we can use arr[letter - 'a'] (ex. ch letter = 'd', result: arr[3])for a letter.

(3)
#include <stdio.h>

int main(void)
{
	int arr[7] = {1};
	int i;

	arr[6] = 1;

	for (i = 0; i < 7; i++) {
		printf("%d ", arr[i]);
	}

	return 0;
}

(4)
designated initializer NOT supported.

#include <stdio.h>

int main(void)
{
	int arr[7] = { [0] = 1, [6] = 1 }; /**/
	int i;

	for (i = 0; i < 7; i++) {
		printf("%d ", arr[i]);
	}

	return 0;
}

(5)
#include <stdio.h>

int main(void)
{
	int i;
	int fib_numbers[40] = {0, 1}; /* NOT int a = 0, b = 1, fib_numbers[40] = {a, b} */

	for (i = 2; i < 40; i++) {
		fib_numbers[i] = fib_numbers[i-1] + fib_numbers[i-2];
	}

	for (i = 0; i < 40; i++) {
		printf("%d\n", fib_numbers[i]);
	}

	printf("\n");

	return 0;

}

(6)
const int segments[10][7] = { {1, 1, 1, 1, 1, 1, 0}, /* 0 */
     				 {0, 1, 1, 0, 0, 0, 0}, /* 1 */
  								  {1, 1, 0, 1, 1, 0, 1}, /* 2 */
								  {1, 1, 1, 1, 0, 0, 1}, /* 3 */
							      {0, 1, 1, 0, 0, 1, 1}, /* 4 */
		                          {1, 0, 1, 1, 0, 1, 1}, /* 5 */
		                          {1, 0, 1, 1, 1, 1, 1}, /* 6 */
		                          {1, 1, 1, 0, 0, 0, 0}, /* 7 */
		                          {1, 1, 1, 1, 1, 1, 1}, /* 8 */
		                          {1, 1, 1, 1, 0, 1, 1}  /* 9 */  } ;
(7)
#include <stdio.h>

int main(void)
{
	const int segments[10][7] = { {1, 1, 1, 1, 1, 1},    /* 0 */
     							  {0, 1, 1},             /* 1 */
  								  {1, 1, 0, 1, 1, 0, 1}, /* 2 */
								  {1, 1, 1, 1, 0, 0, 1}, /* 3 */
							      {0, 1, 1, 0, 0, 1, 1}, /* 4 */
		                          {1, 0, 1, 1, 0, 1, 1}, /* 5 */
		                          {1, 0, 1, 1, 1, 1, 1}, /* 6 */
		                          {1, 1, 1},             /* 7 */
		                          {1, 1, 1, 1, 1, 1, 1}, /* 8 */
		                          {1, 1, 1, 1, 0, 1, 1}  /* 9 */  } ;
}


(8)
float temperature_readings[30][24] = {0};

(9)

	for (i = 0; i < 24; i++) {
		for(j = 0; j < 30; j++) {
			sum += temperature_readings[i][j];
		}
	}
	avg = sum / 30 * 24;

(10)
char chess_board[8][8] = { {'r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'},
                           {'p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'},
                           {' ', '.',' ', '.',' ', '.',' ', '.'},
                           {'.',' ', '.',' ', '.',' ', '.',' '},
                           {' ', '.',' ', '.',' ', '.',' ', '.'},
                           {'.',' ', '.',' ', '.',' ', '.',' '},
                           {'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'},
                           {'R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'} };



(11)
#include <stdio.h>

int main(void)
{
	char checker_board[8][8] = {0};
	int i, j;

	for (i = 0; i < 8; i++) {
		for (j = 0; j < 8; j++) {
			if ((i + j) % 2 == 0) {
				checker_board[i][j] = 'B';
			}
			else if((i + j) % 2 == 1) {
				checker_board[i][j] = 'R';
			}
		}
	}

	return 0;
}


















